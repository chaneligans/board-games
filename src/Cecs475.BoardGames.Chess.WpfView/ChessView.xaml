<UserControl x:Class="Cecs475.BoardGames.Chess.WpfView.ChessView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Cecs475.BoardGames.Chess.WpfView"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800">
  <UserControl.Resources>
    <!-- 
        The ViewModel contains the reference to the ChessBoard object and makes its properties
        easier for the View itself to consume
        -->
    <local:ChessViewModel x:Key="vm"/>
    <local:ChessSquareBackgroundConverter x:Key="BackgroundColor"/>
  </UserControl.Resources>

  <!-- 
    An ItemsControl is basically a "repeater": for each element in a collection that is its ItemSource,
    the control "spits out" whatever is defined in its DataTemplate.
    -->
  <ItemsControl x:Name="BoardPositions" DataContext="{StaticResource vm}"
                  ItemsSource="{Binding Squares}">
    <!-- 
        The ItemsPanel is the "container" for the controls that get spit out. 
        A UniformGrid is a grid that auto-creates rows and columns that are evenly sized.
        -->
    <ItemsControl.ItemsPanel>
      <ItemsPanelTemplate>
        <UniformGrid Columns="8" Rows="8" Background="Green"/>
      </ItemsPanelTemplate>
    </ItemsControl.ItemsPanel>
    <!-- 
        The ItemTemplate defines what to generate for each entry in the ItemSource. Our ItemSource
        is a collection of OthelloSquare objects, which we can bind to when generating the controls
        for the item.
        -->
    <ItemsControl.ItemTemplate>
      <DataTemplate>
        <!-- 
                This control is created for each element in the ItemSource. 
                A Border control draws a border around whatever control it contains.
                -->
        <Border BorderThickness="1" BorderBrush="Black"
                        MouseEnter="Border_MouseEnter" MouseLeave="Border_MouseLeave"
                        MouseUp="Border_MouseUp">
          <Border.Background>
            <MultiBinding Converter="{StaticResource BackgroundColor}">
              <Binding Path="Position"/>
              <Binding Path="IsHighlighted"/>
              <Binding Path="IsSelected"/>
              <Binding Path="IsCheck"/>
            </MultiBinding>
          </Border.Background>
          <Border.Resources>
            <local:PieceImageConverter x:Key="PieceImageConverter"/>
          </Border.Resources>
          <Image Source="{Binding Piece, Converter={StaticResource PieceImageConverter}}"/>
        </Border>
      </DataTemplate>
    </ItemsControl.ItemTemplate>
  </ItemsControl>



</UserControl>
